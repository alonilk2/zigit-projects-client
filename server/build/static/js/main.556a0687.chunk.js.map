{"version":3,"sources":["constants/index.js","utils/AuthAPI.js","components/auth/AuthSlice.js","components/auth/Login.jsx","components/auth/Register.jsx","utils/ProjectsAPI.js","components/projects/ProjectsSlice.js","assets/spinner.svg","components/projects/Dialogs/AddCommentDialog.jsx","components/projects/ProjectStatus.js","components/projects/Dialogs/AddNewProjectDialog.jsx","components/projects/Dialogs/CommentsListDialog.jsx","hooks/useComments.js","components/projects/ProjectsList.jsx","hooks/useProjects.js","components/projects/index.jsx","App.js","serviceWorker.js","store.js","index.js"],"names":["ACCESS_TOKEN","API_BASE_URL","login","loginRequest","Axios","post","response","data","register","registerRequest","_login","createAsyncThunk","thunkAPI","rejectWithValue","_register","signupRequest","console","log","loginSlice","createSlice","name","initialState","loggedIn","user","extraReducers","fulfilled","state","action","payload","rejected","Login","props","useState","email","setEmail","password","setPassword","error","setError","dispatch","useDispatch","navigate","useNavigate","handleSubmit","event","preventDefault","toLowerCase","type","endsWith","localStorage","setItem","token","replace","className","Container","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Alert","severity","AlertTitle","Avatar","m","bgcolor","Typography","component","variant","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","value","onChange","e","target","Button","mb","Grid","container","item","xs","Link","href","Register","getProjects","getItem","Promise","reject","get","headers","Authorization","getComments","project","addProject","addComment","comment","_getProjects","_getComments","_addProject","_addComment","projectsSlice","reducers","search","list","commentslist","actions","AddNewCommentDialog","setComment","loading","setLoading","parentProject","parent","refreshProjects","refres","toggleDialog","toggle","open","handleAdd","length","DetailsForm","multiline","styles","textField","Dialog","dialogContainer","DialogTitle","DialogContent","DialogActions","src","Spinner","width","alt","onClick","flex","direction","minWidth","alert","border","overflow","CloudUploadIcon","addWorkdays","justifyContent","padding","color","addButton","ProjectStatus","AddNewProjectDialog","setName","url","setUrl","status","setStatus","moment","format","duedate","setDuedate","file","setFile","onDrop","useCallback","acceptedFiles","useDropzone","getRootProps","getInputProps","useEffect","formData","FormData","append","Dropzone","style","borderColor","borderWidth","Select","labelId","Object","values","map","idx","MenuItem","LocalizationProvider","dateAdapter","AdapterMoment","DatePicker","newValue","renderInput","params","columns","field","headerName","CommentsList","comments","useSelector","projects","useComments","handleClose","rows","useMemo","com","onClose","DataGrid","pageSize","rowsPerPageOptions","checkboxSelection","ProjectsList","toggleProjectDialog","setToggleProjectDialog","toggleCommentDialog","setToggleCommentDialog","toggleComments","setToggleComments","setParentProject","filter","refresh","proj","includes","useProjects","handleAddComment","handleShowList","renderCell","filename","image","ProjectNameCell","date","isSameOrBefore","Stack","spacing","IconButton","CardHeader","title","endIcon","AddButton","Divider","backgroundColor","DeleteIcon","marginLeft","EditIcon","marginRight","height","textAlign","Dashboard","PrivateRoute","to","App","path","index","element","Boolean","window","location","hostname","match","store","configureStore","reducer","AuthReducer","ProjectsReducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.556a0687.chunk.js","sourcesContent":["export const ACCESS_TOKEN = 'accessToken';\r\nexport const API_BASE_URL = 'https://zigit-projects.herokuapp.com';\r\nexport const API_UPLOADS_URL = 'https://zigit-projects.herokuapp.com/uploads/';\r\n","import Axios from \"axios\";\r\nimport { API_BASE_URL } from \"../constants\";\r\n\r\nexport async function login(loginRequest) {\r\n  let response = await Axios.post(API_BASE_URL + \"/users/login/\", {...loginRequest});\r\n  return response?.data;\r\n}\r\n\r\nexport async function register(registerRequest) {\r\n  let response = await Axios.post(API_BASE_URL + \"/users/register/\", {...registerRequest});\r\n  return response?.data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {\r\n  login,\r\n  register,\r\n} from \"../../utils/AuthAPI\";\r\n\r\nconst initialState = {\r\n  loggedIn: false,\r\n  user: null,\r\n};\r\n\r\nexport const _login = createAsyncThunk(\r\n  \"user/login\",\r\n  async (loginRequest, thunkAPI) => {\r\n    try {\r\n      const response = await login(loginRequest);\r\n      return response;\r\n    } catch (error) {\r\n      if (error !== \"SyntaxError: Unexpected end of JSON input\") return thunkAPI.rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nexport const _register = createAsyncThunk(\r\n  \"user/signup\",\r\n  async (signupRequest, thunkAPI) => {\r\n    try {\r\n      const response = await register(signupRequest);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error !== \"SyntaxError: Unexpected end of JSON input\") return thunkAPI.rejectWithValue();\r\n    }\r\n  }\r\n)\r\n\r\nexport const loginSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  extraReducers: {\r\n    [_login.fulfilled]: (state, action) => {\r\n      state.loggedIn = true;\r\n      state.user = action.payload;\r\n    },\r\n    [_login.rejected]: (state, action) => {\r\n      state.loggedIn = false;\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport default loginSlice.reducer;\r\n","import LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Link from \"@mui/material/Link\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ACCESS_TOKEN } from \"../../constants\";\r\nimport { _login } from \"./AuthSlice\";\r\nimport \"./Login.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\n\r\nexport default function Login(props) {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!email || !password) return setError(true);\r\n    let response = await dispatch(\r\n      _login({\r\n        email: email.toLowerCase(),\r\n        password: password,\r\n      })\r\n    );\r\n    if (response.type.endsWith(\"fulfilled\")) {\r\n      localStorage.setItem(ACCESS_TOKEN, response.payload.token);\r\n      navigate(\"/projects\", { replace: true });\r\n    } else {\r\n      setError(true)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"login-container\">\r\n        <div className=\"image-col\"></div>\r\n        <div className=\"form-col\">\r\n          <Container maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <Box\r\n              sx={{\r\n                marginTop: 8,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              {error && <Alert severity=\"error\">\r\n                <AlertTitle>Error</AlertTitle>\r\n                Please ensure the details entered are correct\r\n              </Alert>}\r\n              <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              <Box\r\n                component=\"form\"\r\n                onSubmit={handleSubmit}\r\n                noValidate\r\n                sx={{ mt: 1 }}\r\n              >\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  error={!email && error}\r\n                />\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  autoComplete=\"current-password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  error={!password && error}\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs></Grid>\r\n                  <Grid item>\r\n                    <Link href=\"/register\" variant=\"body2\">\r\n                      {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Box>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Link from \"@mui/material/Link\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { _register } from \"./AuthSlice\";\r\nimport \"./Login.css\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\n\r\nexport default function Register(props) {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!email || !password) return setError(true);\r\n    let response = await dispatch(\r\n      _register({\r\n        email: email.toLowerCase(),\r\n        password: password,\r\n      })\r\n    );\r\n    if (response.type.endsWith(\"fulfilled\")) {\r\n      navigate(\"/login\");\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"login-container\">\r\n        <div className=\"image-col\"></div>\r\n        <div className=\"form-col\">\r\n          <Container maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <Box\r\n              sx={{\r\n                marginTop: 8,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              {error && (\r\n                <Alert severity=\"error\">\r\n                  <AlertTitle>Error</AlertTitle>\r\n                  Please ensure the details entered are correct\r\n                </Alert>\r\n              )}\r\n              <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign Up\r\n              </Typography>\r\n              <Box\r\n                component=\"form\"\r\n                onSubmit={handleSubmit}\r\n                noValidate\r\n                sx={{ mt: 1 }}\r\n              >\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  error={!email && error}\r\n                />\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  autoComplete=\"current-password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  error={!password && error}\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs></Grid>\r\n                  <Grid item>\r\n                    <Link href=\"/login\" variant=\"body2\">\r\n                      {\"Already have an account? Sign In\"}\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Box>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Axios from \"axios\";\r\nimport { API_BASE_URL } from \"../constants\";\r\nimport { ACCESS_TOKEN } from \"../constants\";\r\n\r\nexport async function getProjects() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  let response = await Axios.get(API_BASE_URL + \"/projects\", {\r\n    headers: {\r\n      Authorization: \"Bearer \" + localStorage.getItem(ACCESS_TOKEN),\r\n    },\r\n  });\r\n  return response?.data;\r\n}\r\n\r\nexport async function getComments(project) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  let response = await Axios.get(API_BASE_URL + \"/comments/\"+project, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + localStorage.getItem(ACCESS_TOKEN),\r\n    },\r\n  });\r\n  return response?.data;\r\n}\r\n\r\nexport async function addProject(project) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  let response = await Axios.post(API_BASE_URL + \"/projects\", project, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + localStorage.getItem(ACCESS_TOKEN),\r\n    },\r\n  });\r\n  return response?.data;\r\n}\r\n\r\nexport async function addComment(comment) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  let response = await Axios.post(API_BASE_URL + \"/comments\", comment, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + localStorage.getItem(ACCESS_TOKEN),\r\n    },\r\n  });\r\n  return response?.data;\r\n}\r\n\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { addComment, addProject, getComments, getProjects } from \"../../utils/ProjectsAPI\";\r\nconst initialState = {\r\n  list: null,\r\n  commentslist: null,\r\n  search: null\r\n};\r\n\r\nexport const _getProjects = createAsyncThunk(\r\n  \"projects/get\",\r\n  async (thunkAPI) => {\r\n    try {\r\n      const response = await getProjects();\r\n      return response;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const _getComments = createAsyncThunk(\r\n  \"projects/getcomments\",\r\n  async (project, thunkAPI) => {\r\n    try {\r\n      const response = await getComments(project);\r\n      return response;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const _addProject = createAsyncThunk(\r\n  \"projects/add\",\r\n  async (project, thunkAPI) => {\r\n    try {\r\n      const response = await addProject(project);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const _addComment = createAsyncThunk(\r\n  \"projects/addcomment\",\r\n  async (comment, thunkAPI) => {\r\n    try {\r\n      const response = await addComment(comment);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const projectsSlice = createSlice({\r\n  name: \"projects\",\r\n  reducers: {\r\n    search: (state, action) => {\r\n      state.search = action.payload\r\n    }\r\n  },\r\n  initialState,\r\n  extraReducers: {\r\n    [_getProjects.fulfilled]: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n    [_getProjects.rejected]: (state, action) => {\r\n      state.list = null;\r\n    },\r\n    [_addProject.fulfilled]: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n    [_addProject.rejected]: (state, action) => {\r\n      state.list = null;\r\n    },\r\n    [_getComments.fulfilled]: (state, action) => {\r\n      state.commentslist = action.payload;\r\n    },\r\n    [_getComments.rejected]: (state, action) => {\r\n      state.commentslist = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { search } = projectsSlice.actions;\r\n\r\nexport default projectsSlice.reducer;\r\n","export default __webpack_public_path__ + \"static/media/spinner.35fbede9.svg\";","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Spinner from \"../../../assets/spinner.svg\";\r\nimport { _addComment } from \"../ProjectsSlice\";\r\n\r\nexport default function AddNewCommentDialog(props) {\r\n  const [comment, setComment] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  let parentProject = props.parent;\r\n  let refreshProjects = props.refres;\r\n\r\n  const handleClose = () => {\r\n    toggleDialog();\r\n  };\r\n\r\n  const toggleDialog = () => {\r\n    props.toggle(!props.open);\r\n  };\r\n\r\n  const handleAdd = async () => {\r\n    if(comment.length === 0) return setError(true)\r\n    try {\r\n      setLoading(true);\r\n      console.log(parentProject)\r\n      let response = await dispatch(_addComment({ comment: comment, parent: parentProject }));\r\n      if (response.type.endsWith(\"fulfilled\")) {\r\n        refreshProjects && refreshProjects();\r\n        toggleDialog();\r\n      }\r\n      setLoading(false);\r\n    } catch (e) {\r\n      setLoading(false);\r\n      setError(e);\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const DetailsForm = (\r\n    <>\r\n      <br />\r\n      <TextField\r\n        required\r\n        error={error && comment?.length === 0}\r\n        id=\"outlined-required\"\r\n        variant=\"outlined\"\r\n        label=\"Comment\"\r\n        value={comment}\r\n        multiline\r\n        sx={styles.textField}\r\n        onChange={(e) => setComment(e.target.value)}\r\n        fullWidth\r\n      />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Dialog open={props.open} sx={styles.dialogContainer}>\r\n      <DialogTitle>Add New Comment</DialogTitle>\r\n      <DialogContent>\r\n        {error && <Alert severity=\"error\">All fields are required.</Alert>}\r\n        {DetailsForm}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {loading && <img src={Spinner} width={50} alt=\"\"></img>}\r\n        <Button variant=\"text\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Box sx={{ flex: \"1 1 auto\" }} />\r\n        <Button variant=\"contained\" onClick={handleAdd}>\r\n          Create\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  dialogContainer: {\r\n    direction: \"ltr\",\r\n    minWidth: \"500px\",\r\n  },\r\n  alert: { margin: \"2%\", direction: \"ltr\" },\r\n  textField: {\r\n    margin: \"2% 0\",\r\n    border: \"0px\",\r\n    overflow: \"hidden\",\r\n  },\r\n  CloudUploadIcon: {\r\n    margin: \"0 2% \",\r\n  },\r\n  addWorkdays: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    padding: \"2% 0\",\r\n    color: \"rgba(0, 0, 0, 0.6)\",\r\n  },\r\n  addButton: {\r\n    bgcolor: \"success\",\r\n  },\r\n};\r\n","export const ProjectStatus = {\r\n    0: \"Active\",\r\n    1: \"Finished\",\r\n    2: \"Canceled\"\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Spinner from \"../../../assets/spinner.svg\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport { ProjectStatus } from \"../ProjectStatus\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\";\r\nimport { _addProject } from \"../ProjectsSlice\";\r\nimport moment from \"moment\";\r\n\r\nexport default function AddNewProjectDialog(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  const [status, setStatus] = useState(0);\r\n  const [duedate, setDuedate] = useState(moment().format(\"YYYY-MM-DD\"));\r\n  const [file, setFile] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setFile(acceptedFiles);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  const handleClose = () => {\r\n    toggleDialog();\r\n  };\r\n\r\n  const toggleDialog = () => {\r\n    props.toggle(!props.open);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const handleAdd = async () => {\r\n    if (name.length === 0 || url.length === 0 || file.length === 0) {\r\n      return setError(true);\r\n    }\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"status\", status);\r\n    formData.append(\"duedate\", duedate);\r\n    formData.append(\"url\", url);\r\n    formData.append(\"file\", file[0]);\r\n    try {\r\n      setLoading(true);\r\n      let response = await dispatch(_addProject(formData));\r\n      if (response.type.endsWith(\"fulfilled\")) {\r\n        toggleDialog();\r\n      }\r\n      setLoading(false);\r\n    } catch (e) {\r\n      setLoading(false);\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const Dropzone = (\r\n    <div\r\n      className=\"dropzone-container\"\r\n      {...getRootProps()}\r\n      style={\r\n        error && file?.length === 0\r\n          ? { borderColor: \"red\", borderWidth: \"3px\", color: \"red\" }\r\n          : null\r\n      }\r\n    >\r\n      <input {...getInputProps()} />\r\n      <p>גרור ושחרר קובץ, או לחץ לבחירה</p>\r\n      <CloudUploadIcon sx={styles.CloudUploadIcon} />\r\n    </div>\r\n  );\r\n\r\n  const DetailsForm = (\r\n    <>\r\n      {/* <DialogContentText sx={{ direction: \"ltr\" }}>\r\n        יש למלא את כל הפרטים לפי הסדר.\r\n        <br />\r\n        לנותן השירות יפתח חשבון במערכת באופן אוטומטי בלחיצה על \"הוספה\", כאשר\r\n        פרטי ההתחברות יהיו הדוא\"ל והסיסמה הזמנית שתוצג בהמשך הטופס.\r\n        <br />\r\n        בסעיף יצירת סיסמה יש ללחוץ על הכפתור להצגת הסיסמה הזמנית.\r\n      </DialogContentText> */}\r\n      <br />\r\n      <TextField\r\n        required\r\n        error={error && name?.length === 0}\r\n        id=\"outlined-required\"\r\n        variant=\"outlined\"\r\n        label=\"Project Name\"\r\n        value={name}\r\n        sx={styles.textField}\r\n        onChange={(e) => setName(e.target.value)}\r\n        fullWidth\r\n      />\r\n      <TextField\r\n        required\r\n        error={error && url?.length === 0}\r\n        id=\"outlined-required\"\r\n        variant=\"outlined\"\r\n        value={url}\r\n        label=\"Website URL\"\r\n        sx={styles.textField}\r\n        onChange={(e) => setUrl(e.target.value)}\r\n        fullWidth\r\n      />\r\n\r\n      <Select\r\n        labelId=\"demo-simple-select-label\"\r\n        id=\"demo-simple-select\"\r\n        value={status}\r\n        label=\"Status\"\r\n        fullWidth\r\n        onChange={(e) => setStatus(e.target.value)}\r\n      >\r\n        {Object.values(ProjectStatus).map((status, idx) => {\r\n          return <MenuItem value={idx}>{status}</MenuItem>;\r\n        })}\r\n      </Select>\r\n      <div style={{ margin: \"10px\" }} />\r\n      <LocalizationProvider dateAdapter={AdapterMoment}>\r\n        <DatePicker\r\n          label=\"Due date\"\r\n          value={duedate}\r\n          onChange={(newValue) => {\r\n            setDuedate(newValue);\r\n          }}\r\n          renderInput={(params) => <TextField {...params} />}\r\n        />\r\n      </LocalizationProvider>\r\n      <div style={{ margin: \"10px\" }} />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Dialog open={props.open} sx={styles.dialogContainer}>\r\n      <DialogTitle>Create New Project</DialogTitle>\r\n      <DialogContent>\r\n        {error && <Alert severity=\"error\">All fields are required.</Alert>}\r\n        {DetailsForm}\r\n        {Dropzone}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {loading && <img src={Spinner} width={50} alt=\"\"></img>}\r\n        <Button variant=\"text\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Box sx={{ flex: \"1 1 auto\" }} />\r\n        <Button variant=\"contained\" onClick={handleAdd}>\r\n          Create\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  dialogContainer: {\r\n    direction: \"ltr\",\r\n    minWidth: \"500px\",\r\n  },\r\n  alert: { margin: \"2%\", direction: \"ltr\" },\r\n  textField: {\r\n    margin: \"2% 0\",\r\n    border: \"0px\",\r\n    overflow: \"hidden\",\r\n  },\r\n  CloudUploadIcon: {\r\n    margin: \"0 2% \",\r\n  },\r\n  addWorkdays: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    padding: \"2% 0\",\r\n    color: \"rgba(0, 0, 0, 0.6)\",\r\n  },\r\n  addButton: {\r\n    bgcolor: \"success\",\r\n  },\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useEffect, useMemo } from \"react\";\r\nimport useComments from \"../../../hooks/useComments\";\r\n\r\nconst columns = [\r\n  { field: \"id\", headerName: \"ID\", width: 70 },\r\n  { field: \"text\", headerName: \"Comment\", width: 600 },\r\n  { field: \"createdAt\", headerName: \"Created At\", width: 250 },\r\n];\r\n\r\nexport default function CommentsList(props) {\r\n  const comments = useComments();\r\n\r\n  const handleClose = () => {\r\n    props.toggle(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.parent?.id) comments.getComments(props.parent?.id);\r\n  }, [props.parent?.id]);\r\n\r\n  const rows = useMemo(\r\n    () =>\r\n      comments.comments?.map((com) => {\r\n        return com;\r\n      }),\r\n    [comments.comments]\r\n  );\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={handleClose} fullWidth maxWidth=\"lg\">\r\n      <DialogTitle>Comments List</DialogTitle>\r\n      <DialogContent>\r\n        {rows && (\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            rowsPerPageOptions={[5]}\r\n            checkboxSelection\r\n          />\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { _getComments } from \"../components/projects/ProjectsSlice\";\r\n\r\nexport default function useComments() {\r\n    const dispatch = useDispatch()\r\n    const comments = useSelector(state => state.projects.commentslist)\r\n\r\n    const getComments = async (project) => {\r\n        dispatch(_getComments(project))    \r\n    }\r\n\r\n    return {\r\n        comments,\r\n        getComments\r\n    }\r\n}","import AddIcon from \"@mui/icons-material/Add\";\r\nimport AddCommentIcon from \"@mui/icons-material/AddComment\";\r\nimport FlagIcon from \"@mui/icons-material/Flag\";\r\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\r\nimport { Avatar, Box, Button, Divider } from \"@mui/material\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport moment from \"moment\";\r\nimport { useState } from \"react\";\r\nimport { API_UPLOADS_URL } from \"../../constants\";\r\nimport useProjects from \"../../hooks/useProjects\";\r\nimport AddNewCommentDialog from \"./Dialogs/AddCommentDialog\";\r\nimport AddNewProjectDialog from \"./Dialogs/AddNewProjectDialog\";\r\nimport CommentsList from \"./Dialogs/CommentsListDialog\";\r\nimport { ProjectStatus } from \"./ProjectStatus\";\r\n\r\nexport default function ProjectsList() {\r\n  const [toggleProjectDialog, setToggleProjectDialog] = useState(false);\r\n  const [toggleCommentDialog, setToggleCommentDialog] = useState(false);\r\n  const [toggleComments, setToggleComments] = useState(false);\r\n  const [parentProject, setParentProject] = useState();\r\n  const projects = useProjects();\r\n\r\n  const ProjectNameCell = (params) => {\r\n    let filename = params?.value.image;\r\n    return (\r\n      <Box sx={styles.ProjectNameCell}>\r\n        <Avatar alt=\"Project\" src={API_UPLOADS_URL + filename} />\r\n        {params?.value?.name}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const handleAddComment = (params) => {\r\n    return () => {\r\n      setParentProject(params.value);\r\n      setToggleCommentDialog(!toggleCommentDialog);\r\n    };\r\n  };\r\n\r\n  const handleShowList = (params) => {\r\n    return () => {\r\n      setParentProject(params.value);\r\n      setToggleComments(!toggleComments);\r\n    };\r\n  };\r\n\r\n  const ActionsCell = (params) => {\r\n    return (\r\n      <Stack direction=\"row\" spacing={1}>\r\n        <IconButton\r\n          aria-label=\"add\"\r\n          color=\"success\"\r\n          onClick={handleAddComment(params)}\r\n        >\r\n          <AddCommentIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          aria-label=\"list\"\r\n          color=\"primary\"\r\n          onClick={handleShowList(params)}\r\n        >\r\n          <ListAltIcon />\r\n        </IconButton>\r\n      </Stack>\r\n    );\r\n  };\r\n\r\n  const DueCell = (params) => {\r\n    let date = params.value.duedate;\r\n    let status = params.value.status;\r\n    if (\r\n      moment(date).isSameOrBefore(moment()) &&\r\n      ProjectStatus[status] === \"Active\"\r\n    ) {\r\n      return (\r\n        <Stack direction=\"row\" spacing={1}>\r\n          <IconButton aria-label=\"add\" color=\"error\">\r\n            <FlagIcon />\r\n          </IconButton>\r\n          <p style={{ margin: \"auto 0\" }}>{date}</p>\r\n        </Stack>\r\n      );\r\n    }\r\n    return (\r\n      <Stack direction=\"row\" spacing={1}>\r\n        <p style={{ margin: \"auto 0\" }}>{date}</p>\r\n      </Stack>\r\n    );\r\n  };\r\n\r\n  const handleAddProject = () => {\r\n    setToggleProjectDialog(true);\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"ID\", width: 70 },\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Name\",\r\n      width: 180,\r\n      renderCell: ProjectNameCell,\r\n    },\r\n    { field: \"url\", headerName: \"Website URL\", width: 350 },\r\n    { field: \"status\", headerName: \"Status\", width: 200 },\r\n    {\r\n      field: \"duedate\",\r\n      headerName: `Due date`,\r\n      width: 280,\r\n      renderCell: DueCell,\r\n    },\r\n    {\r\n      field: \"actions\",\r\n      headerName: \"Add Comment\",\r\n      width: 280,\r\n      renderCell: ActionsCell,\r\n    },\r\n  ];\r\n\r\n  const rows =\r\n    projects.list?.length > 0 &&\r\n    projects.list.map((project) => {\r\n      return {\r\n        id: project.id,\r\n        name: {\r\n          name: project.name,\r\n          image: project.image,\r\n        },\r\n        url: project.url,\r\n        status: ProjectStatus[project.status],\r\n        duedate: project,\r\n        actions: project,\r\n      };\r\n    });\r\n\r\n  return (\r\n    <Box sx={styles.Box}>\r\n      <AddNewProjectDialog\r\n        open={toggleProjectDialog}\r\n        toggle={setToggleProjectDialog}\r\n      />\r\n      <AddNewCommentDialog\r\n        open={toggleCommentDialog}\r\n        toggle={setToggleCommentDialog}\r\n        parent={parentProject}\r\n        refresh={projects.refresh}\r\n      />\r\n      {toggleComments && (\r\n        <CommentsList\r\n          open={toggleComments}\r\n          toggle={setToggleComments}\r\n          parent={parentProject}\r\n        />\r\n      )}\r\n      <CardHeader\r\n        title=\"Projects Management\"\r\n        sx={styles.CardHeader}\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            endIcon={<AddIcon />}\r\n            sx={styles.AddButton}\r\n            onClick={handleAddProject}\r\n          >\r\n            Create New Project\r\n          </Button>\r\n        }\r\n      />\r\n      <Divider />\r\n      {rows && (\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={5}\r\n          rowsPerPageOptions={[5]}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  AddButton: { direction: \"ltr\", backgroundColor: \"#0369ff\" },\r\n  DeleteIcon: { marginLeft: \"20%\", color: \"red\" },\r\n  EditIcon: { marginRight: \"20%\" },\r\n  Box: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    marginLeft: \"2%\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  CardHeader: { textAlign: \"left\" },\r\n  ProjectNameCell: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { _getProjects } from \"../components/projects/ProjectsSlice\";\r\n\r\nexport default function useProjects() {\r\n  const dispatch = useDispatch();\r\n  const [error, setError] = useState();\r\n  const projects = useSelector((state) => state.projects.list);\r\n  const filter = useSelector((state) => state.projects.search);\r\n\r\n  const refresh = async () => {\r\n    let response = await dispatch(_getProjects());\r\n    if (response.type.endsWith(\"rejected\")) setError(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    refresh();\r\n  }, []);\r\n\r\n  return {\r\n    list: filter\r\n      ? projects.filter((proj) =>\r\n          proj?.name?.toLowerCase().includes(filter.toLowerCase())\r\n        )\r\n      : projects,\r\n    refresh: refresh,\r\n  };\r\n}\r\n","import TextField from \"@mui/material/TextField\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport ProjectsList from \"./ProjectsList\";\r\nimport { search } from \"./ProjectsSlice\";\r\n\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <header className=\"dashboard-header\">\r\n        <a href=\"/\">\r\n          <h1>Projector</h1>\r\n        </a>\r\n      </header>\r\n      <section className=\"row main-section\">\r\n        <div className=\"col-2 sidemenu-container\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Search By Name\"\r\n            variant=\"outlined\"\r\n            onChange={(e) => dispatch(search(e.target.value))}\r\n          />\r\n        </div>\r\n\r\n        <main className=\"col-10 main\">\r\n          <div className=\"datagrid-container \">\r\n            <ProjectsList />\r\n          </div>\r\n        </main>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport {\r\n  Route,\r\n  BrowserRouter,\r\n  Routes,\r\n  Navigate,\r\n  Outlet,\r\n} from \"react-router-dom\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\nimport Dashboard from \"./components/projects\";\r\nimport { ACCESS_TOKEN } from \"./constants\";\r\n\r\nconst PrivateRoute = ({user}) => {\r\n  return user ? <Outlet /> : <Navigate to=\"/login\" />;\r\n};\r\n\r\nfunction App() {\r\n  const user = ()=>localStorage.getItem(ACCESS_TOKEN);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\">\r\n          <Route index element={<Login />} />\r\n          <Route path=\"login\" element={<Login />} />\r\n          <Route path=\"register\" element={<Register />} />\r\n          <Route element={<PrivateRoute user={user} />}>\r\n            <Route path=\"projects\" element={<Dashboard />} />\r\n          </Route>\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport AuthReducer from './components/auth/AuthSlice'\r\nimport ProjectsReducer from './components/projects/ProjectsSlice'\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: AuthReducer,\r\n    projects: ProjectsReducer\r\n  },\r\n})","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}